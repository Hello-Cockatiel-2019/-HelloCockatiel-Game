{"version":3,"file":"app.js","sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./src/main.js","webpack://[name]/./src/scenes/GameScene.js","webpack://[name]/./src/scenes/MainMenu.js","webpack://[name]/./src/scenes/Restart.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"app\"] = factory();\n\telse\n\t\troot[\"app\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./dev/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import 'phaser';\nimport GameScene from './scenes/GameScene';\nimport MainMenu from './scenes/MainMenu';\nimport Restart from './scenes/Restart';\nvar config = {\n  // For more settings see <https://github.com/photonstorm/phaser/blob/master/src/boot/Config.js>\n  type: Phaser.WEBGL,\n  pixelArt: true,\n  roundPixels: true,\n  parent: 'content',\n  width: 600,\n  height: 900,\n  physics: {\n    \"default\": 'arcade',\n    arcade: {\n      debug: false,\n      gravity: {\n        y: 0\n      }\n    }\n  },\n  scene: [MainMenu, GameScene, Restart]\n};\nvar game = new Phaser.Game(config);","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar bg;\nvar player;\nvar monster;\nvar cursor;\nvar monsters;\nvar bullet;\nvar bullets;\nvar health = 5;\nvar hp;\nvar normal;\nvar spread;\nvar shootStatus = 1; // 0คือสถานะระหว่างยิงลูกพิเศษ 1ลูกธรรมดา 2ลูกกระจาย 3ลูกเร็ว\n\nvar fast;\nvar monsterSpawn;\nvar spreadCount = 0;\nvar fastCount = 0;\nvar fastbullets;\nvar fires;\nvar fastbullet;\nvar enemyFire;\nvar enemyBullet;\nvar leftSpreadBullets;\nvar middleSpreadBullets;\nvar rightSpreadBullets;\nvar item;\nvar items;\nvar cloudSpawn;\nvar clouds;\nvar cloud;\nvar bigFires;\nvar bigFire;\nvar scoreText;\nvar score = 0;\nvar seaAndItemSpawn;\nvar sea;\nvar seas;\nvar bush;\nvar bushs;\nvar randomBush;\nvar fired = false;\nvar checkAmount;\n\nvar GameScene =\n/*#__PURE__*/\nfunction (_Phaser$Scene) {\n  _inherits(GameScene, _Phaser$Scene);\n\n  function GameScene(test) {\n    _classCallCheck(this, GameScene);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GameScene).call(this, {\n      key: 'GameScene'\n    }));\n  }\n\n  _createClass(GameScene, [{\n    key: \"preload\",\n    value: function preload() {\n      this.load.spritesheet('player', 'src/image/player.png', {\n        frameWidth: 410,\n        frameHeight: 310\n      });\n      this.load.image('bg', 'src/image/background.png');\n      this.load.image('bullet', 'src/image/Bullet.png');\n      this.load.spritesheet('monster', 'src/image/botSpriteSheet.png', {\n        frameWidth: 2232,\n        frameHeight: 2232\n      });\n      this.load.spritesheet('hp', 'src/image/HP.png', {\n        frameWidth: 2510,\n        frameHeight: 1510\n      });\n      this.load.spritesheet('fire', 'src/image/Fire.png', {\n        frameWidth: 492,\n        frameHeight: 703\n      });\n      this.load.image('cloud1', 'src/image/cloud1.png');\n      this.load.image('cloud2', 'src/image/cloud2.png');\n      this.load.image('cloud3', 'src/image/cloud3.png');\n      this.load.image('cloud4', 'src/image/cloud4.png');\n      this.load.image('cloud5', 'src/image/cloud5.png');\n      this.load.image('bigFire', 'src/image/bigfire.png');\n      this.load.image('sea1', 'src/image/Sea-1.png');\n      this.load.image('sea2', 'src/image/Sea-2.png');\n      this.load.image('bush1', 'src/image/bush-1.png');\n      this.load.image('bush2', 'src/image/bush-2.png');\n      this.load.image('bush3', 'src/image/bush-3.png');\n      this.load.image('separate', 'src/image/Separate.png');\n      this.load.image('rapid', 'src/image/Rapid.png');\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      var _this = this;\n\n      bg = this.add.tileSprite(0, 0, 600, 900, 'bg').setOrigin(0, 0);\n      player = this.physics.add.sprite(300, 850, 'player').setCollideWorldBounds(true).setDepth(10).setScale(0.4);\n      hp = this.physics.add.sprite(450, 50, 'hp').setScale(0.1).setDepth(10);\n      var style = {\n        font: '32px Arial',\n        fill: '#FFFFFF'\n      };\n      scoreText = this.add.text(16, 16, \"Score : 0\", style).setDepth(10);\n      cursor = this.input.keyboard.createCursorKeys();\n      monsters = this.physics.add.group();\n      bullets = this.physics.add.group();\n      leftSpreadBullets = this.physics.add.group();\n      middleSpreadBullets = this.physics.add.group();\n      rightSpreadBullets = this.physics.add.group();\n      fastbullets = this.physics.add.group();\n      fires = this.physics.add.group();\n      items = this.physics.add.group();\n      clouds = this.physics.add.group();\n      bigFires = this.physics.add.group();\n      seas = this.physics.add.group();\n      bushs = this.physics.add.group();\n      this.anims.create({\n        key: 'playerAni',\n        frames: this.anims.generateFrameNumbers('player', {\n          start: 0,\n          end: 7\n        }),\n        framerate: 10,\n        repeat: -1\n      });\n      this.anims.create({\n        key: 'fly',\n        frames: this.anims.generateFrameNumbers('monster', {\n          start: 0,\n          end: 2\n        }),\n        framerate: 5,\n        repeat: -1\n      });\n      this.anims.create({\n        key: 'fireAni',\n        frames: this.anims.generateFrameNumbers('fire', {\n          start: 0,\n          end: 2\n        }),\n        framerate: 10,\n        repeat: -1\n      });\n      cloudSpawn = this.time.addEvent({\n        delay: 4500,\n        callback: function callback() {\n          var whichCloud = 'cloud' + Phaser.Math.Between(1, 5);\n          cloud = this.physics.add.sprite(Phaser.Math.Between(0, this.game.config.width), -100, whichCloud).setScale(0.2).setDepth(11);\n          clouds.add(cloud);\n          clouds.setVelocityY(150);\n        },\n        callbackScope: this,\n        loop: true\n      });\n      monsterSpawn = this.time.addEvent({\n        delay: 1500 - score * 0.7,\n        callback: function callback() {\n          monster = this.physics.add.sprite(Phaser.Math.Between(50, this.game.config.width - 50), -50, 'monster').setScale(0.05).setDepth(5);\n          monsters.add(monster);\n          monsters.setVelocityY(200);\n        },\n        callbackScope: this,\n        loop: true\n      });\n      enemyFire = this.time.addEvent({\n        delay: 2500 - score * 0.7,\n        callback: function callback() {\n          var position = monsters.getLength();\n\n          for (var i = 0; i < position; i++) {\n            if (!(monsters.getChildren()[i].y >= 650)) {\n              enemyBullet = this.physics.add.sprite(monsters.getChildren()[i].x, monsters.getChildren()[i].y + 50, 'fire').setScale(0.08).setDepth(5);\n              fires.add(enemyBullet);\n            }\n          }\n\n          fires.setVelocityY(300);\n        },\n        callbackScope: this,\n        loop: true,\n        paused: false\n      });\n      normal = this.time.addEvent({\n        delay: 1000,\n        callback: function callback() {\n          bullet = this.physics.add.image(player.x, player.y - 50, 'bullet').setScale(0.2).setDepth(5);\n          bullets.add(bullet);\n          bullets.setVelocityY(-200);\n        },\n        callbackScope: this,\n        loop: true,\n        paused: false\n      });\n      spreadCount = 0;\n      spread = this.time.addEvent({\n        delay: 1000,\n        callback: function callback() {\n          var bullet1 = this.physics.add.image(player.x - 30, player.y - 100, 'bullet').setScale(0.2).setDepth(5);\n          var bullet2 = this.physics.add.image(player.x, player.y - 100, 'bullet').setScale(0.2).setDepth(5);\n          var bullet3 = this.physics.add.image(player.x + 30, player.y - 100, 'bullet').setScale(0.2).setDepth(5);\n          leftSpreadBullets.add(bullet1);\n          middleSpreadBullets.add(bullet2);\n          rightSpreadBullets.add(bullet3);\n          leftSpreadBullets.setVelocity(-120, -150);\n          middleSpreadBullets.setVelocity(0, -150);\n          rightSpreadBullets.setVelocity(120, -150);\n          spreadCount++;\n\n          if (spreadCount >= 10) {\n            shootStatus = 1;\n            spread.paused = true;\n          }\n        },\n        callbackScope: this,\n        paused: true,\n        loop: true\n      });\n      fastCount = 0;\n      fast = this.time.addEvent({\n        delay: 300,\n        callback: function callback() {\n          fastbullet = this.physics.add.image(player.x, player.y - 100, 'bullet').setScale(0.2).setDepth(5);\n          fastbullets.add(fastbullet);\n          fastbullets.setVelocityY(-300);\n          fastCount++;\n\n          if (fastCount == 25) {\n            shootStatus = 1;\n            fast.paused = true;\n          }\n        },\n        callbackScope: this,\n        paused: true,\n        loop: true\n      });\n      seaAndItemSpawn = this.time.addEvent({\n        delay: 30000,\n        callback: function callback() {\n          if (seas.getLength() < 1) {\n            var whichSea = 'sea' + Phaser.Math.Between(1, 2);\n\n            if (whichSea == 'sea1') {\n              sea = this.physics.add.image(300, -1700, whichSea).setScale(0.33).setDepth(1);\n            } else {\n              sea = this.physics.add.image(300, -1200, whichSea).setScale(0.33).setDepth(1);\n            }\n\n            seas.add(sea);\n            seas.setVelocityY(100);\n            var itemSpawn = Phaser.Math.Between(0, 1); // 0 is item will not spawn, 1 is spawn.\n\n            if (itemSpawn == 1) {\n              var which = Phaser.Math.Between(1, 2);\n\n              if (which == 1) {\n                if (whichSea == 'sea1') {\n                  item = this.physics.add.image(sea.x, sea.y + 100, 'separate').setDepth(2).setScale(0.2);\n                  item.setData('type', 'spread');\n                  items.add(item);\n                  items.setVelocityY(100);\n                } else {\n                  item = this.physics.add.image(sea.x, sea.y - 100, 'separate').setDepth(2).setScale(0.2);\n                  item.setData('type', 'spread');\n                  items.add(item);\n                  items.setVelocityY(100);\n                }\n              } else {\n                if (whichSea == 'sea1') {\n                  item = this.physics.add.image(sea.x, sea.y + 100, 'rapid').setDepth(2).setScale(0.2);\n                  item.setData('type', 'fast');\n                  items.add(item);\n                  items.setVelocityY(100);\n                } else {\n                  item = this.physics.add.image(sea.x, sea.y - 100, 'rapid').setDepth(2).setScale(0.2);\n                  item.setData('type', 'fast');\n                  items.add(item);\n                  items.setVelocityY(100);\n                }\n              }\n            }\n          }\n        },\n        callbackScope: this,\n        loop: true\n      });\n      randomBush = this.time.addEvent({\n        delay: 14000 - score * 0.8,\n        callback: function callback() {\n          var whichBush = Phaser.Math.Between(1, 3);\n\n          if (whichBush == 1) {\n            bush = this.physics.add.image(465, -100, 'bush1').setScale(0.8).setDepth(1);\n            bushs.add(bush);\n          } else if (whichBush == 2) {\n            bush = this.physics.add.image(135, -100, 'bush2').setScale(0.3).setDepth(1);\n            bushs.add(bush);\n          } else {\n            bush = this.physics.add.image(465, -100, 'bush3').setScale(0.3).setDepth(1);\n            bushs.add(bush);\n          }\n\n          bushs.setVelocityY(100);\n        },\n        callbackScope: this,\n        loop: true\n      });\n      checkAmount = this.time.addEvent({\n        delay: 1000,\n        callback: function callback() {\n          /* console.log('number of monsters ' + monsters.getLength())\n           console.log('number of fires ' + fires.getLength())\n           console.log('number of bullets ' + bullets.getLength())\n           console.log('number of fastbullets ' + fastbullets.getLength())\n           console.log('number of leftspreadbullets ' + leftSpreadBullets.getLength())\n           console.log('number of middlespreadbullets ' + middleSpreadBullets.getLength())\n           console.log('number of rightspreadbullets ' + rightSpreadBullets.getLength())\n           console.log('shoot status ' + shootStatus)\n           console.log('amount of items ' + items.getLength())\n           console.log('cloud amount ' + clouds.getLength())\n           console.log('bigfire amount ' + bigFires.getLength())\n           console.log('sea amount ' + seas.getLength())\n           console.log('bush amount ' + bushs.getLength())\n           console.log('-----------------------------------------------')*/\n        },\n        callbackScope: this,\n        loop: true\n      });\n      this.physics.add.overlap(bullets, monsters, this.kill);\n      this.physics.add.overlap(leftSpreadBullets, monsters, this.kill);\n      this.physics.add.overlap(middleSpreadBullets, monsters, this.kill);\n      this.physics.add.overlap(rightSpreadBullets, monsters, this.kill);\n      this.physics.add.overlap(fastbullets, monsters, this.kill);\n      this.physics.add.overlap(player, monsters, this.monsterHit);\n      this.physics.add.overlap(bullets, bigFires, this.killBigFire.bind(this));\n      this.physics.add.overlap(leftSpreadBullets, bigFires, this.killBigFire.bind(this));\n      this.physics.add.overlap(middleSpreadBullets, bigFires, this.killBigFire.bind(this));\n      this.physics.add.overlap(rightSpreadBullets, bigFires, this.killBigFire.bind(this));\n      this.physics.add.overlap(fastbullets, bigFires, this.killBigFire.bind(this));\n      this.physics.add.overlap(player, bigFires, this.bigFireHit);\n      this.physics.add.overlap(player, fires, this.firesHit);\n      this.physics.add.overlap(player, items, this.getItem);\n      this.physics.add.overlap(bushs, seas, this.checkSeaAndBush);\n      this.physics.add.overlap(fires, bushs, function (fire, forest) {\n        if (Phaser.Math.Between(1, 70) == 1) {\n          //random bigFire spawn \n          if (!fired) {\n            if (forest.y <= 450) {\n              fire.destroy(true);\n              fired = true;\n              bigFire = _this.physics.add.image(forest.x, forest.y - 25, 'bigFire').setScale(0.06).setDepth(4);\n              bigFire.setData('health', '3');\n              bigFires.add(bigFire);\n              bigFires.setVelocityY(100);\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      bg.tilePositionY -= 1.65;\n      monsters.playAnimation('fly', '0');\n      fires.playAnimation('fireAni', '0');\n      player.anims.play('playerAni', true);\n\n      for (var i = 0; i < clouds.getLength(); i++) {\n        var cloud = clouds.getChildren()[i];\n\n        if (cloud.y > this.game.config.height + 100) {\n          cloud.destroy(true);\n        }\n      }\n\n      for (var i = 0; i < fires.getLength(); i++) {\n        var fire = fires.getChildren()[i];\n\n        if (fire.y > this.game.config.height + 100) {\n          fire.destroy(true);\n        }\n      }\n\n      for (var i = 0; i < bullets.getLength(); i++) {\n        /*var bullet = bullets.getChildren()[i]\n        if (bullet.y <= -100) {\n            bullet.destroy(true)\n        }*/\n        var bull = bullets.getChildren()[0];\n\n        if (bull.y <= -50) {\n          bull.destroy(true);\n        }\n      }\n\n      for (var i = 0; i < fastbullets.getLength(); i++) {\n        var fastBul = fastbullets.getChildren()[i];\n\n        if (fastBul.y <= -100) {\n          fastBul.destroy(true);\n        }\n      }\n\n      for (var i = 0; i < leftSpreadBullets.getLength(); i++) {\n        var left = leftSpreadBullets.getChildren()[i];\n\n        if (left.y <= -100) {\n          left.destroy(true);\n        }\n      }\n\n      for (var i = 0; i < middleSpreadBullets.getLength(); i++) {\n        var mid = middleSpreadBullets.getChildren()[i];\n\n        if (mid.y <= -100) {\n          mid.destroy(true);\n        }\n      }\n\n      for (var i = 0; i < rightSpreadBullets.getLength(); i++) {\n        var right = rightSpreadBullets.getChildren()[i];\n\n        if (right.y <= -100) {\n          right.destroy(true);\n        }\n      }\n\n      for (var i = 0; i < items.getLength(); i++) {\n        var item = items.getChildren()[i];\n\n        if (item.y > this.game.config.height + 100) {\n          item.destroy(true);\n        }\n      }\n\n      for (var i = 0; i < seas.getLength(); i++) {\n        var sea = seas.getChildren()[i];\n\n        if (sea.y > this.game.config.height + 500) {\n          sea.destroy(true);\n        }\n      }\n\n      for (var i = 0; i < monsters.getLength(); i++) {\n        var mons = monsters.getChildren()[i];\n\n        if (mons.y > this.game.config.height + 100) {\n          mons.destroy(true);\n          score -= 50;\n          scoreText.setText('Score: ' + score);\n        }\n      }\n\n      for (var i = 0; i < bigFires.getLength(); i++) {\n        var bigFi = bigFires.getChildren()[i];\n\n        if (bigFi.y > this.game.config.height + 100) {\n          bigFi.destroy(true);\n          fired = false;\n          score -= 150;\n          scoreText.setText('Score: ' + score);\n        }\n      }\n\n      for (var i = 0; i < bushs.getLength(); i++) {\n        var bush = bushs.getChildren()[i];\n\n        if (bush.y > this.game.config.height + 100) {\n          bush.destroy(true);\n        }\n      }\n\n      if (health <= 0) {\n        this.gameOver();\n      }\n\n      if (score < -500) {\n        this.gameOver();\n      }\n\n      if (monsterSpawn.delay < 500) {\n        monsterSpawn.delay = 500;\n      }\n\n      if (enemyFire.delay < 800) {\n        enemyFire.delay = 800;\n      }\n\n      if (randomBush.delay < 700) {\n        enemyFire.delay = 700;\n      }\n\n      if (cursor.left.isDown) {\n        player.setVelocityX(-400);\n      } else if (cursor.right.isDown) {\n        player.setVelocityX(400);\n      } else {\n        player.setVelocityX(0);\n      }\n\n      if (shootStatus == 1) {\n        fast.paused = true;\n        spread.paused = true;\n        normal.paused = false;\n      }\n\n      if (shootStatus == 2) {\n        shootStatus = 0;\n        spreadCount = 0;\n        normal.paused = true;\n        fast.paused = true;\n        spread.paused = false;\n      }\n\n      if (shootStatus == 3) {\n        shootStatus = 0;\n        fastCount = 0;\n        normal.paused = true;\n        spread.paused = true;\n        fast.paused = false;\n      }\n    }\n  }, {\n    key: \"gameOver\",\n    value: function gameOver() {\n      this.scene.start('Restart');\n      console.log('Game Over');\n    }\n  }, {\n    key: \"kill\",\n    value: function kill(bullet, monster) {\n      bullet.destroy(true);\n      monster.destroy(true);\n      score += 100;\n      scoreText.setText('Score: ' + score);\n    }\n  }, {\n    key: \"killBigFire\",\n    value: function killBigFire(bullet, bigFire) {\n      bullet.destroy(true);\n      var health = bigFire.getData('health');\n\n      if (health == 1) {\n        bigFire.destroy(true);\n        fired = false;\n        score += 300;\n        scoreText.setText('Score: ' + score);\n\n        if (Phaser.Math.Between(1, 3) == 1) {\n          //random item spawn \n          if (Phaser.Math.Between(1, 2) == 1) {\n            //random item type\n            item = this.physics.add.image(bigFire.x, bigFire.y, 'separate').setDepth(2).setScale(0.2);\n            item.setData('type', 'spread');\n            items.add(item);\n            items.setVelocityY(100);\n          } else {\n            item = this.physics.add.image(bigFire.x, bigFire.y, 'rapid').setDepth(2).setScale(0.2);\n            item.setData('type', 'fast');\n            items.add(item);\n            items.setVelocityY(100);\n          }\n        }\n      } else if (health == 3) {\n        bigFire.setData('health', '2');\n      } else {\n        bigFire.setData('health', '1');\n      }\n    }\n  }, {\n    key: \"monsterHit\",\n    value: function monsterHit(player, monster) {\n      monster.destroy(true);\n      hp.setFrame(5);\n      health = 0;\n    }\n  }, {\n    key: \"bigFireHit\",\n    value: function bigFireHit(player, bigFire) {\n      bigFire.destroy(true);\n      fired = false;\n      hp.setFrame(5);\n      health = 0;\n    }\n  }, {\n    key: \"firesHit\",\n    value: function firesHit(player, fire) {\n      switch (health) {\n        case 5:\n          hp.setFrame(1);\n          break;\n\n        case 4:\n          hp.setFrame(2);\n          break;\n\n        case 3:\n          hp.setFrame(3);\n          break;\n\n        case 2:\n          hp.setFrame(4);\n          break;\n\n        case 1:\n          hp.setFrame(5);\n          break;\n\n        case 0:\n          break;\n      }\n\n      health -= 1;\n      fire.destroy(true);\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(player, item) {\n      var which = item.getData('type');\n      item.destroy(true);\n\n      switch (which) {\n        case 'spread':\n          normal.paused = true;\n          fast.paused = true;\n          spread.paused = true;\n          shootStatus = 2;\n          break;\n\n        case 'fast':\n          normal.paused = true;\n          fast.paused = true;\n          spread.paused = true;\n          shootStatus = 3;\n          break;\n      }\n    }\n  }, {\n    key: \"checkSeaAndBush\",\n    value: function checkSeaAndBush(bush, sea) {\n      bush.destroy(true);\n    }\n  }]);\n\n  return GameScene;\n}(Phaser.Scene);\n\nexport default GameScene;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar bg01;\nvar sign01;\nvar sign02;\nvar sign03;\nvar sign04;\nvar Mtext;\nvar Stext01;\nvar Stext02;\nvar Stext03;\nvar Stext04;\nvar signP;\nvar con01;\nvar con02;\nvar con03;\nvar con04;\nvar grass;\nvar mountain;\nvar tree;\nvar ground;\nvar fullButton;\n\nvar MainMenu =\n/*#__PURE__*/\nfunction (_Phaser$Scene) {\n  _inherits(MainMenu, _Phaser$Scene);\n\n  function MainMenu(test) {\n    _classCallCheck(this, MainMenu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MainMenu).call(this, {\n      key: 'MainMenu'\n    }));\n  }\n\n  _createClass(MainMenu, [{\n    key: \"preload\",\n    value: function preload() {\n      this.load.image('bg01', './src/image/BGMenu1.png');\n      this.load.image('sign1', './src/image/Sign1.png');\n      this.load.image('sign2', './src/image/Sign2.png');\n      this.load.image('sign3', './src/image/Sign3.png');\n      this.load.image('sign4', './src/image/Sign4.png');\n      this.load.image('grass', './src/image/Grass.png');\n      this.load.image('ground', './src/image/Ground.png');\n      this.load.image('mountain', './src/image/Mountain.png');\n      this.load.image('tree', './src/image/Tree.png');\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      bg01 = this.add.image(0, 0, 'bg01').setOrigin(0);\n      grass = this.add.image(-30, 65, 'grass').setScale(0.45).setOrigin(0);\n      ground = this.add.image(100, 0, 'ground');\n      mountain = this.add.image(200, 1000, 'mountain');\n      tree = this.add.image(0, 0, 'tree').setScale(0.5).setOrigin(0, 0);\n      sign01 = this.add.image(0, 0, 'sign3').setScale(0.4);\n      sign02 = this.add.image(0, 0, 'sign1').setScale(0.25);\n      sign03 = this.add.image(0, 0, 'sign2').setScale(0.25);\n      sign04 = this.add.image(0, 0, 'sign4').setScale(0.25);\n      Mtext = this.add.text(0, 0, 'Name', {\n        fontFamily: 'font1',\n        fill: '#ffffff',\n        align: 'center'\n      }).setOrigin(0.5).setFontSize(100);\n      Stext01 = this.add.text(0, 0, 'Play', {\n        fontFamily: 'font1',\n        fill: '#ffffff',\n        align: 'center'\n      }).setOrigin(0.5).setFontSize(60);\n      Stext02 = this.add.text(0, 0, 'Setting', {\n        fontFamily: 'font1',\n        fill: '#ffffff',\n        align: 'center'\n      }).setOrigin(0.5).setFontSize(60);\n      Stext03 = this.add.text(0, 0, 'Quit', {\n        fontFamily: 'font1',\n        fill: '#ffffff',\n        align: 'center'\n      }).setOrigin(0.5).setFontSize(60);\n      con01 = this.add.container(300, -100, [sign01, Mtext]).setScale(1);\n      con02 = this.add.container(300, -100, [sign02, Stext01]).setScale(1);\n      con03 = this.add.container(300, -100, [sign03, Stext02]).setScale(1);\n      con04 = this.add.container(300, -100, [sign04, Stext03]).setScale(1);\n      console.log('con01.x: ' + con01.x + ', con01.y: ' + con01.y); //Change text to sign0x next commit \n\n      Stext01.setInteractive();\n      Stext01.on('clicked', function () {\n        this.scene.start('GameScene');\n      }, this);\n      this.input.on('gameobjectup', function (pointer, gameObject) {\n        gameObject.emit('clicked', gameObject);\n      }, this);\n\n      var _this = this;\n\n      _this.tweens.add({\n        targets: con01,\n        delay: 1500,\n        props: {\n          y: {\n            value: 200,\n            duration: 1500\n          }\n        }\n      });\n\n      _this.tweens.add({\n        targets: con02,\n        delay: 1500,\n        props: {\n          y: {\n            value: 400,\n            duration: 1500\n          }\n        }\n      });\n\n      _this.tweens.add({\n        targets: con03,\n        delay: 1500,\n        props: {\n          y: {\n            value: 550,\n            duration: 1500\n          }\n        }\n      });\n\n      _this.tweens.add({\n        targets: con04,\n        delay: 1500,\n        props: {\n          y: {\n            value: 700,\n            duration: 1500\n          }\n        }\n      });\n\n      _this.tweens.add({\n        targets: grass,\n        props: {\n          y: {\n            value: -65,\n            duration: 1500\n          }\n        }\n      });\n\n      _this.tweens.add({\n        targets: ground,\n        props: {\n          y: {\n            value: 100,\n            duration: 1500\n          }\n        }\n      });\n\n      _this.tweens.add({\n        targets: mountain,\n        props: {\n          y: {\n            value: -10,\n            duration: 1500\n          }\n        }\n      });\n\n      _this.tweens.add({\n        targets: tree,\n        props: {\n          y: {\n            value: -100,\n            duration: 1500\n          }\n        }\n      }); // fullButton = this.add.sprite(100, 100, 'full', 0).setOrigin(1, 0).setInteractive()\n      // fullButton.setFrame(0)\n      // fullButton.setTint(0xff0000)\n      // fullButton.on('clicked', function () {\n      //     var i = 0;\n      //     if (i = 0) {\n      //         fullButton.setFrame(0)\n      //         this.scale.stopFullscreen()\n      //         i = 1;\n      //     }else{\n      //         fullButton.setFrame(1)\n      //         this.scale.startFullscreen()\n      //     }\n      // }, this)\n\n\n      con01.setDepth(1);\n      grass.setDepth(1);\n      tree.setDepth(0);\n    }\n  }]);\n\n  return MainMenu;\n}(Phaser.Scene);\n\nexport default MainMenu;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar bg;\nvar cloudSpawn;\nvar clouds;\nvar cloud;\n\nvar Restart =\n/*#__PURE__*/\nfunction (_Phaser$Scene) {\n  _inherits(Restart, _Phaser$Scene);\n\n  function Restart(test) {\n    _classCallCheck(this, Restart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Restart).call(this, {\n      key: 'Restart'\n    }));\n  }\n\n  _createClass(Restart, [{\n    key: \"preload\",\n    value: function preload() {\n      this.load.image('bg', 'src/image/background.png');\n      this.load.image('cloud1', 'src/image/cloud1.png');\n      this.load.image('cloud2', 'src/image/cloud2.png');\n      this.load.image('cloud3', 'src/image/cloud3.png');\n      this.load.image('cloud4', 'src/image/cloud4.png');\n      this.load.image('cloud5', 'src/image/cloud5.png');\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      bg = this.add.tileSprite(0, 0, 600, 900, 'bg').setOrigin(0, 0);\n      var style = {\n        fontFamily: 'font1',\n        fill: '#ffffff'\n      };\n      this.text1 = this.add.text(this.game.config.width * 0.5, this.game.config.height * 0.5, 'Click to Restart', style).setOrigin(0.5).setFontSize(40);\n      this.text1.setInteractive();\n      this.text1.on('pointerdown', function () {\n        this.scene.scene.start('GameScene');\n      });\n      this.text2 = this.add.text(this.game.config.width * 0.5, this.game.config.height * 0.5 + 60, 'Click to Exit', style).setOrigin(0.5).setFontSize(40);\n      this.text2.setInteractive();\n      this.text2.on('pointerdown', function () {\n        this.scene.scene.start('MainMenu');\n      });\n      clouds = this.physics.add.group();\n      cloudSpawn = this.time.addEvent({\n        delay: 4500,\n        callback: function callback() {\n          var whichCloud = 'cloud' + Phaser.Math.Between(1, 5);\n          cloud = this.physics.add.sprite(Phaser.Math.Between(0, this.game.config.width), -100, whichCloud).setScale(0.2).setDepth(11);\n          clouds.add(cloud);\n          clouds.setVelocityY(150);\n        },\n        callbackScope: this,\n        loop: true\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      bg.tilePositionY -= 1.65;\n\n      for (var i = 0; i < clouds.getLength(); i++) {\n        var cloud = clouds.getChildren()[i];\n\n        if (cloud.y > this.game.config.height + 100) {\n          cloud.destroy(true);\n        }\n      }\n    }\n  }]);\n\n  return Restart;\n}(Phaser.Scene);\n\nexport default Restart;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvzpsourceRoot":""}